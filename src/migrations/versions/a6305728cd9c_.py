"""empty message

Revision ID: a6305728cd9c
Revises: d5e6eaf0519e
Create Date: 2024-11-18 17:28:14.217403

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a6305728cd9c'
down_revision: Union[str, None] = 'd5e6eaf0519e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('applicant', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.drop_constraint('record_applicant_id_key', 'record', type_='unique')
    op.drop_constraint('record_manager_id_key', 'record', type_='unique')
    op.drop_constraint('record_vacancy_id_key', 'record', type_='unique')
    op.create_unique_constraint(None, 'record', ['id'])
    op.drop_constraint('request_applicant_id_key', 'request', type_='unique')
    op.drop_constraint('request_vacancy_id_key', 'request', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('request_vacancy_id_key', 'request', ['vacancy_id'])
    op.create_unique_constraint('request_applicant_id_key', 'request', ['applicant_id'])
    op.drop_constraint(None, 'record', type_='unique')
    op.create_unique_constraint('record_vacancy_id_key', 'record', ['vacancy_id'])
    op.create_unique_constraint('record_manager_id_key', 'record', ['manager_id'])
    op.create_unique_constraint('record_applicant_id_key', 'record', ['applicant_id'])
    op.alter_column('applicant', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    # ### end Alembic commands ###
